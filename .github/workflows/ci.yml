name: Python CI

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff pytest

      - name: Run Ruff
        run: ruff check .

      - name: Run tests
        run: pytest
        env:
          PYTHONPATH: ${{ github.workspace }}

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/sample_api:latest
            ghcr.io/${{ github.repository_owner }}/sample_api:${{ github.sha }}

      - name: Build and push UI image
        uses: docker/build-push-action@v5
        with:
          context: ./web_app
          file: ./web_app/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/sample_ui:latest
            ghcr.io/${{ github.repository_owner }}/sample_ui:${{ github.sha }}

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Create env file
        run: |
          echo "DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}" > .env
          echo "COMMIT_HASH=${{ github.sha }}" >> .env
          echo "COMMIT_HASH: $COMMIT_HASH"
          echo "DOMAIN_NAME: $DOMAIN_NAME"

      - name: Copy files to VPS
        run: |
          scp docker-stack.yml ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/docker-stack.yml
          scp .env ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/.env
          scp init.sql ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/init.sql

      - name: Deploy to VPS
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "\
            DOMAIN_NAME=${{ secrets.DOMAIN_NAME }} \
            COMMIT_HASH=${{ github.sha }} \
            docker stack deploy \
            --with-registry-auth \
            --compose-file docker-stack.yml \
            sample_app_stack"

      - name: Cleanup SSH key
        run: rm -rf ~/.ssh
        if: always()
